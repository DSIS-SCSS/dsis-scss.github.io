{"pages":[{},{},{},{},{},{},{}],"posts":[{"title":"Anaconda&Jupyter快速上手","date":"2022-08-10T13:20:39.000Z","path":"wiki/Anaconda-jupyter快速上手/","text":"conda是一个python虚拟环境管理软件，它允许你为每一个python项目创建独立的环境，如果你被python的环境问题折磨过，那么你就会知道conda有多好用。而Anaconda则是python的一个发行版本，也是conda的图形化版本。有了Anaconda，每次在运行一个新的python项目时，你都应该重新创建一个python env，并且在该env下安装python包、执行命令 安装Anaconda(conda) 推荐清华源下载最新的版本，或者合适的版本，注意选择合适你的操作系统和处理器架构的安装包。如果是在没有图形界面的服务器上，推荐安装Miniconda Anaconda的安装有图形化界面，在此就不再赘述，没有特殊要求的话，使用默认配置一路点继续就可以了，需要注意的是，在安装过程中记得勾选将conda配置进系统环境变量中 Miniconda安装包下载下来之后是一个.sh脚本文件，对其添加执行文件后，直接利用bash执行然后按照步骤安装即可 123wget https://mirrors.tuna.tsinghua.edu.cn/anaconda/miniconda/Miniconda-x.x.x-Linux-x86_64.shsudo +x Miniconda-x.x.x-Linux-x86_64.sh./Miniconda-x.x.x-Linux-x86_64.sh 注意Miniconda安装时它会询问你是否要运行conda init，请选择yes，此步的作用是将conda的配置写入你的shell配置文件中，安装完成后，可以查看你的shell配置文件是否包含 1234567891011121314# &gt;&gt;&gt; conda initialize &gt;&gt;&gt;# !! Contents within this block are managed by &#x27;conda init&#x27; !!__conda_setup=&quot;$(&#x27;/Users/xingguangjie/opt/anaconda3/bin/conda&#x27; &#x27;shell.zsh&#x27; &#x27;hook&#x27; 2&gt; /dev/null)&quot;if [ $? -eq 0 ]; then eval &quot;$__conda_setup&quot;else if [ -f &quot;/Users/xingguangjie/opt/anaconda3/etc/profile.d/conda.sh&quot; ]; then . &quot;/Users/xingguangjie/opt/anaconda3/etc/profile.d/conda.sh&quot; else export PATH=&quot;/Users/xingguangjie/opt/anaconda3/bin:$PATH&quot; fifiunset __conda_setup# &lt;&lt;&lt; conda initialize &lt;&lt;&lt; 如果没有的话，就无法正常执行conda指令，请重新安装或者切换到conda的安装目录中（执行安装脚本的时候有写），手动执行conda init 1./conda init 完成安装后，在终端中输入conda --versin可正常运行即可（Windows可以在开始-应用程序中找到anaconda prompt作为终端使用） conda常用命令 有了Anaconda，就可以在Anaconda Navigator里面创建虚拟环境、安装包等等，但是不推荐使用，更加常见的方式还是直接通过命令行与conda交互，下面列举几条常见的命令 激活一个环境（切换到已有的环境中） 1conda activate base # 切换到名字为base的环境下（刚刚安装好conda没有创建新环境的情况下默认只有base环境） 从环境中退出 1conda deactivate 创建一个新环境，并且指定环境的python版本 1conda create -n test python=3.7 # 创建python版本为3.7的名为test的环境 删除一个环境 1conda remove test # 删除一个名为test的环境 在特定的环境中安装包 123conda activate testpip install numpy&gt;=3.7 # 通过pip安装版本号高于3.7的numpy包conda install numpy&gt;=3.7 # 通过conda安装版本号高于3.7的numpy包 配置Jupyter jupyter是一个开源的python交互式web应用，最大的用处就是可以一行一行运行python代码，并且实时的将一些数据或者图表打印出来，有助于debug以及数据分析 首先安装jupyter 12conda activate testconda install jupyter # 在名为test的环境下安装jupyter 推荐使用conda安装，它会帮你把所有的依赖都安装好 安装完成后，即可在安装的环境下直接运行jupyter-notebook命令，会自动打开一个浏览器窗口，同时在终端中出现一个本地url，访问这个url即可进入jupyter服务 jupyter中的基本单元是代码块，代码都是一块一块执行的，在代码块中编写代码，然后按shift-Enter即可完成执行这一块的代码，并且产生输出 在服务器中使用jupyter 如果使用云端服务器，则可以配置服务器端口转发实现本地运行服务器端jupyter服务（例如服务器端有完善的python环境或者需要使用服务器GPU运行调试某些python代码） 配置比较简单，可以参考 Jupyter notebook远程连接服务器 Jupyter Notebook服务器配置","categories":[{"name":"工具","slug":"tools","permalink":"https://dsis-scss.github.io/categories/tools/"}]},{"title":"时序预测论文整理","date":"2022-07-28T08:39:34.000Z","path":"wiki/时序预测论文整理/","text":"Tittle Algorithm Idea classical methods An adaptive prediction approach based on workload pattern discrimination in the cloud An adaptive approach categorizes the workloads into different classes which are automatically assigned for different models according to workload features TODO Exponential Smoothing(ES) A Hierarchical Framework for Modeling and Forecasting Web Server Workload Auto Regression(AR) A linear combination of past values of the variable under consideration is used to forecast the value for upcoming time instances. Dual time-scale distributed capacity allocation and load redirect algorithms for cloud systems Moving Average(MA) non-linear optimization The model is appropriate for time series exhbiting seasonal behavior only Efficient autoscaling in the cloud using predictive models for workload forecasting Autoregressive Integrated Moving Average(ARIMA) also discussed the challenges involved in auto scaling in a cloud environment Workload Prediction Using ARIMA Model and Its Impact on Cloud Applications’ QoS Autoregressive Integrated Moving Average(ARIMA) ARIMA on different confidence interval to predict web server workload Workload characterization and prediction in the cloud: A multiple time series approach Hidden Markov Model distinguish the temporal correlations in obtained clusters of VMs A workload analysis of live event broadcast service in cloud Regression techniques the approach is based on simple statistical models that might not capture the patterns in more complex data Workload characterization and prediction in the cloud: A multiple time series approach multiple time series approch The model does a grouping of similar applications's need in order to improve the accuracy of predictions machine learning methods Support vector machines experts for time series forecasting Self organizing map(SOM) and support vector machines(SVMs) Self organizing map was used to cluster the data in different regions while SVMs were used to predict the future data Referential kNN Regression for Financial Time Series Forecasting \\(k\\) Nearest Neighbors(kNN) For financial time series prediction. kNNs are lazy learners and need high computational cost Hierarchical neural networks based prediction and control of dynamic reconfiguration for multilevel embedded systems the Neural network used to model workload variations in multimidia designs A cost-aware auto-scaling approach using the workload prediction in service clouds Linear regression the predicted workload was used to decide the type of scaling Efficient resources provisioning based on load forecasting in cloud Support Vector Regression(SVR) and Kalman smoother It achieved high prediction accuracy Combining time series prediction models using genetic algorithm to autoscaling Web applications hosted in the cloud infrastructure Ensemble based model It uses five different base prediction models. Each model is assigned a weight and contributes accordingly in predictions. The weight are assigned and optimized using genetic algorithm Empirical prediction models for adaptive resource provisioning in the cloud Neural network and Linear regression RVLBPNN: A Workload Forecasting Model for Smart Cloud Computing back propagation learning algorithm It adjusts the weights of model according to error trend. A Predictive Method for Workload Forecasting in the Cloud Environment neural network and steepest descent learning algorithm suffers from high prediction errors. Workload prediction in cloud using artificial neural network and adaptive differential evolution neural network and adaptive differential evolution","categories":[{"name":"知识","slug":"knowledge","permalink":"https://dsis-scss.github.io/categories/knowledge/"},{"name":"论文","slug":"knowledge/论文","permalink":"https://dsis-scss.github.io/categories/knowledge/%E8%AE%BA%E6%96%87/"}]},{"title":"分布式系统入门(MIT 6.824)","date":"2022-07-27T09:02:26.000Z","path":"wiki/分布式系统入门/","text":"MIT6.824课程主页 http://nil.csail.mit.edu/6.824/2022/ 课程安排 http://nil.csail.mit.edu/6.824/2022/schedule.html 论文翻译 MapReduce (2004) GFS (2003) Fault-Tolerant Virtual Machines (2010) Raft (2014) lab参考 SwordHarry/MIT6.824_2021_note 参考书目 DDIA-设计数据密集型应用","categories":[{"name":"知识","slug":"knowledge","permalink":"https://dsis-scss.github.io/categories/knowledge/"},{"name":"体系结构(System)","slug":"knowledge/体系结构-System","permalink":"https://dsis-scss.github.io/categories/knowledge/%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84-System/"}]},{"title":"test工具","date":"2022-07-27T09:02:19.000Z","path":"wiki/test工具/","text":"","categories":[{"name":"工具","slug":"tools","permalink":"https://dsis-scss.github.io/categories/tools/"},{"name":"科研软件","slug":"tools/科研软件","permalink":"https://dsis-scss.github.io/categories/tools/%E7%A7%91%E7%A0%94%E8%BD%AF%E4%BB%B6/"}]},{"title":"DDIA-设计数据密集型应用","date":"2022-07-27T09:01:14.000Z","path":"wiki/DDIA-设计数据密集型应用/","text":"书名 《Designing Data-Intensive Applications》 简介 现今，尤其是在互联网领域，大多数应用都属于数据密集型应用。本书从底层数据结构到顶层架构设计，将数据系统设计中的精髓娓娓道来。其中的宝贵经验无论是对架构师、DBA、还是后端工程师、甚至产品经理都会有帮助。 实验室有一部分研究是在分布式多机系统下的数据存储与管理，特别是应用于云硬盘系统的存储管理，该书可以有助于理解数据密集型应用所需要考虑的问题，发现可以优化的点，以及对于分布式架构有所了解。 中文翻译 设计数据密集型应用 - 中文翻译","categories":[{"name":"资源","slug":"resource","permalink":"https://dsis-scss.github.io/categories/resource/"},{"name":"书目","slug":"resource/书目","permalink":"https://dsis-scss.github.io/categories/resource/%E4%B9%A6%E7%9B%AE/"}]}],"categories":[{"name":"工具","slug":"tools","permalink":"https://dsis-scss.github.io/categories/tools/"},{"name":"知识","slug":"knowledge","permalink":"https://dsis-scss.github.io/categories/knowledge/"},{"name":"论文","slug":"knowledge/论文","permalink":"https://dsis-scss.github.io/categories/knowledge/%E8%AE%BA%E6%96%87/"},{"name":"体系结构(System)","slug":"knowledge/体系结构-System","permalink":"https://dsis-scss.github.io/categories/knowledge/%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84-System/"},{"name":"科研软件","slug":"tools/科研软件","permalink":"https://dsis-scss.github.io/categories/tools/%E7%A7%91%E7%A0%94%E8%BD%AF%E4%BB%B6/"},{"name":"资源","slug":"resource","permalink":"https://dsis-scss.github.io/categories/resource/"},{"name":"书目","slug":"resource/书目","permalink":"https://dsis-scss.github.io/categories/resource/%E4%B9%A6%E7%9B%AE/"}],"tags":[]}